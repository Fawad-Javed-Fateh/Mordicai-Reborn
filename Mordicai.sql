
--------------------------------------------------------
--  DDL for Table SECTIONS
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."SECTIONS" 
   (	"ID" VARCHAR2(1 CHAR), 
	"CR_NAME" VARCHAR2(30 CHAR)
   ); 

  ALTER TABLE "MORDICAI"."SECTIONS" ADD PRIMARY KEY ("ID");
  
--------------------------------------------------------
--  DDL for Table SEMESTER
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."SEMESTER" 
   (	"DURATION" NUMBER(*,0), 
	"NAME" VARCHAR2(20 CHAR), 
	"START_DATE" DATE, 
	"SEMESTER_ID" NUMBER
   ); 

  ALTER TABLE "MORDICAI"."SEMESTER" ADD CONSTRAINT "SEMESTER_PK" PRIMARY KEY ("SEMESTER_ID");
  ALTER TABLE "MORDICAI"."SEMESTER" MODIFY ("START_DATE" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."SEMESTER" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."SEMESTER" MODIFY ("DURATION" NOT NULL ENABLE);
     CREATE SEQUENCE  "MORDICAI"."SEMESTER_SEMESTER_ID_SEQ"  MINVALUE 1 MAXVALUE 99999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE ;
   CREATE SEQUENCE  "MORDICAI"."SEMESTER_SEQUENCE"  MINVALUE 1 MAXVALUE 99 INCREMENT BY 1 START WITH 20 CACHE 20 NOORDER  NOCYCLE ;
   
     CREATE OR REPLACE TRIGGER "MORDICAI"."SEMESTER_SEMESTER_ID_TRG" BEFORE
  INSERT ON Semester FOR EACH ROW  WHEN (NEW.Semester_ID IS NULL) BEGIN :NEW.Semester_ID := Semester_Semester_ID_SEQ.NEXTVAL;
END;

/
ALTER TRIGGER "MORDICAI"."SEMESTER_SEMESTER_ID_TRG" ENABLE;

CREATE OR REPLACE TRIGGER "MORDICAI"."SEMESTER_ID_TRIGGER" 
    before insert on semester
    for each row
begin
  :new.semester_id := semester_sequence.nextval;
  dbms_output.put_line('Evolution');
end;
/
ALTER TRIGGER "MORDICAI"."SEMESTER_ID_TRIGGER" ENABLE;

  
--------------------------------------------------------
--  DDL for Table INSTRUCTORS
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."INSTRUCTORS" 
   (	"NAME" VARCHAR2(25 CHAR), 
	"INS_ID" NUMBER(*,0), 
	"START_DATE" DATE, 
	"SALARY" NUMBER(*,0), 
	"ADDRESS" VARCHAR2(200 CHAR), 
	"EMAIL" VARCHAR2(30 CHAR), 
	"DEPARTMENTS_D_CODE" VARCHAR2(2 CHAR), 
	"DESIGNATION" VARCHAR2(8 CHAR)
);
  ALTER TABLE "MORDICAI"."INSTRUCTORS" ADD CONSTRAINT "INSTRUCTORS_PK" PRIMARY KEY ("INS_ID");
  ALTER TABLE "MORDICAI"."INSTRUCTORS" ADD CHECK ( ( Departments_D_code IS NULL AND Designation IS NULL) OR ( Departments_D_code IS NOT NULL AND Designation IS NOT NULL) ) ENABLE;
  ALTER TABLE "MORDICAI"."INSTRUCTORS" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."INSTRUCTORS" MODIFY ("SALARY" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."INSTRUCTORS" MODIFY ("START_DATE" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."INSTRUCTORS" MODIFY ("INS_ID" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."INSTRUCTORS" MODIFY ("NAME" NOT NULL ENABLE);
CREATE SEQUENCE  "MORDICAI"."INSTRUCTOR_SEQUENCE"  MINVALUE 1 MAXVALUE 999 INCREMENT BY 1 START WITH 120 CACHE 20 NOORDER  NOCYCLE ;
CREATE OR REPLACE TRIGGER "MORDICAI"."INSTRUCTOR_ID_TRIGGER" 
    before insert on instructors
    for each row
begin
  :new.ins_id := instructor_sequence.nextval;
  dbms_output.put_line('Evolution');
end;
/
ALTER TRIGGER "MORDICAI"."INSTRUCTOR_ID_TRIGGER" ENABLE;


--------------------------------------------------------
--  DDL for Table DEPARTMENTS
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."DEPARTMENTS" 
   (	"D_NAME" VARCHAR2(20 CHAR), 
	"D_CODE" VARCHAR2(2 CHAR), 
	"D_PHONE" NUMBER(*,0), 
	"INSTRUCTORS_INS_ID" NUMBER(*,0), 
	"START_DATE" DATE
   ); 

  ALTER TABLE  "MORDICAI"."DEPARTMENTS" ADD CONSTRAINT "DEPARTMENTS_FK1" FOREIGN KEY ("INSTRUCTORS_INS_ID") REFERENCES "MORDICAI"."INSTRUCTORS"("INS_ID") ;
  ALTER TABLE "MORDICAI"."DEPARTMENTS" ADD CONSTRAINT "DEPARTMENTS_PK" PRIMARY KEY ("D_CODE");
  ALTER TABLE "MORDICAI"."DEPARTMENTS" ADD CHECK ( ( Instructors_Ins_ID IS NULL AND Start_Date IS NULL) OR ( Instructors_Ins_ID IS NOT NULL AND Start_Date IS NOT NULL) ) ENABLE;
  ALTER TABLE "MORDICAI"."DEPARTMENTS" MODIFY ("D_CODE" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."DEPARTMENTS" MODIFY ("D_NAME" NOT NULL ENABLE);
  ALTER TABLE  "MORDICAI"."INSTRUCTORS" ADD CONSTRAINT "INSTRUCTORS_FK1" FOREIGN KEY ("DEPARTMENTS_D_CODE") REFERENCES "MORDICAI"."DEPARTMENTS"("D_CODE") ON DELETE SET NULL;

--------------------------------------------------------
--  DDL for Table COURSES
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."COURSES" 
   (	"ID" NUMBER(*,0) NOT NULL, 
	"CREDIT_HOURS" NUMBER(*,0), 
	"NAME" VARCHAR2(30 CHAR), 
	"DEPARTMENTS_D_CODE" VARCHAR2(2 CHAR), 
	"SEMESTER_SEMESTER_ID" NUMBER
   ); 
ALTER TABLE  "MORDICAI"."COURSES" ADD CONSTRAINT "COURSES_FK1" FOREIGN KEY ("SEMESTER_SEMESTER_ID") REFERENCES "MORDICAI"."SEMESTER"("SEMESTER_ID")  ON DELETE CASCADE;
   ALTER TABLE  "MORDICAI"."COURSES" ADD CONSTRAINT "COURSES_FK2" FOREIGN KEY ("DEPARTMENTS_D_CODE") REFERENCES "MORDICAI"."DEPARTMENTS"("D_CODE")  ON DELETE CASCADE;
  ALTER TABLE "MORDICAI"."COURSES" ADD CONSTRAINT "COURSES_PK" PRIMARY KEY ("ID","SEMESTER_SEMESTER_ID");
  ALTER TABLE "MORDICAI"."COURSES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."COURSES" MODIFY ("CREDIT_HOURS" NOT NULL ENABLE);
  

CREATE SEQUENCE  "MORDICAI"."COURSES_SEQUENCE"  MINVALUE 10020 MAXVALUE 99999 INCREMENT BY 10 START WITH 10020 CACHE 20 NOORDER  NOCYCLE ;
  
CREATE OR REPLACE TRIGGER "MORDICAI"."COURSES_ID_TRIGGER" 
    before insert on courses
    for each row
begin
  :new.id := courses_sequence.nextval;
  dbms_output.put_line('Evolution');
end;
/
ALTER TRIGGER "MORDICAI"."COURSES_ID_TRIGGER" ENABLE;

--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."STUDENT" 
   (	"NAME" VARCHAR2(30 CHAR), 
	"BATCH" NUMBER(*,0), 
	"ID" NUMBER(*,0), 
	"ADDRESS" VARCHAR2(200 CHAR), 
	"EMAIL" VARCHAR2(30 CHAR), 
	"INSTRUCTORS_INS_ID" NUMBER(*,0), 
	"PAY" NUMBER(*,0)
   ); 
ALTER TABLE  "MORDICAI"."STUDENT" ADD CONSTRAINT "STUDENT_FK1" FOREIGN KEY ("INSTRUCTORS_INS_ID") REFERENCES "MORDICAI"."INSTRUCTORS"("INS_ID")  ON DELETE SET NULL;
  ALTER TABLE "MORDICAI"."STUDENT" ADD CONSTRAINT "STUDENT_PK" PRIMARY KEY ("ID");
  ALTER TABLE "MORDICAI"."STUDENT" ADD CHECK ( ( Instructors_Ins_ID IS NULL AND Pay IS NULL) OR ( Instructors_Ins_ID IS NOT NULL AND Pay IS NOT NULL) ) ENABLE;
  ALTER TABLE "MORDICAI"."STUDENT" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."STUDENT" MODIFY ("BATCH" NOT NULL ENABLE);
  ALTER TABLE "MORDICAI"."STUDENT" MODIFY ("NAME" NOT NULL ENABLE);
     CREATE SEQUENCE  "MORDICAI"."STUDENT_SEQUENCE"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
     
     CREATE OR REPLACE TRIGGER "MORDICAI"."STUDENT_ID_TRIGGER" 
    before insert on student
    for each row
begin
  :new.id := student_sequence.nextval;
  dbms_output.put_line('Evolution');
end;
/
ALTER TRIGGER "MORDICAI"."STUDENT_ID_TRIGGER" ENABLE;

--------------------------------------------------------
--  DDL for Table ALLOTTED
--------------------------------------------------------

CREATE TABLE "MORDICAI"."ALLOTTED" 
   (	"STUDENT_ID" NUMBER(*,0), 
	"SECTIONS_ID" VARCHAR2(1 CHAR), 
	"COURSES_ID" NUMBER(38,0),
    "SEMESTER_SEMESTER_ID" NUMBER
   );
   
   ALTER TABLE  "MORDICAI"."ALLOTTED" ADD CONSTRAINT "ALLOTTED_FK1" FOREIGN KEY ("STUDENT_ID") REFERENCES "MORDICAI"."STUDENT"("ID")  ON DELETE CASCADE;
   ALTER TABLE  "MORDICAI"."ALLOTTED" ADD CONSTRAINT "ALLOTTED_FK2" FOREIGN KEY ("COURSES_ID","SEMESTER_SEMESTER_ID") REFERENCES "MORDICAI"."COURSES"("ID","SEMESTER_SEMESTER_ID")  ON DELETE CASCADE;  
   ALTER TABLE "MORDICAI"."ALLOTTED" ADD CONSTRAINT "ALLOTTED_PK" PRIMARY KEY ("STUDENT_ID", "COURSES_ID");
  ALTER TABLE "MORDICAI"."ALLOTTED" MODIFY ("SECTIONS_ID" NOT NULL ENABLE);
  




--------------------------------------------------------
--  DDL for Table ENROLLED_IN
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."ENROLLED_IN" 
   (	"STUDENT_ID" NUMBER(*,0), 
	"SEMESTER_SEMESTER_ID" NUMBER, 
	"SGPA" FLOAT(2), 
	"CRED_HRS" NUMBER(*,0)
   ); 
ALTER TABLE  "MORDICAI"."ENROLLED_IN" ADD CONSTRAINT "ENROLLED_FK1" FOREIGN KEY ("STUDENT_ID") REFERENCES "MORDICAI"."STUDENT"("ID")  ON DELETE CASCADE;
  ALTER TABLE "MORDICAI"."ENROLLED_IN" ADD CONSTRAINT "ENROLLED_FK2" FOREIGN KEY ("SEMESTER_SEMESTER_ID") REFERENCES "MORDICAI"."SEMESTER"("SEMESTER_ID")  ON DELETE CASCADE;
  ALTER TABLE "MORDICAI"."ENROLLED_IN" ADD CONSTRAINT "ENROLLED_IN_PK" PRIMARY KEY ("STUDENT_ID", "SEMESTER_SEMESTER_ID");


--------------------------------------------------------
--  DDL for Table TAKES
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."TAKES" 
   (	"STUDENT_ID" NUMBER(*,0), 
	"COURSES_ID" NUMBER(*,0), 
	"GPA" FLOAT(2), 
	"MID1" FLOAT(2), 
	"MID2" FLOAT(2), 
	"FINAL" FLOAT(2), 
	"ASS_QUIZZ" FLOAT(2),
    "SEMESTER_SEMESTER_ID" NUMBER
   ); 
ALTER TABLE  "MORDICAI"."TAKES" ADD CONSTRAINT "TAKES_FK1" FOREIGN KEY ("STUDENT_ID") REFERENCES "MORDICAI"."STUDENT"("ID")  ON DELETE CASCADE;
ALTER TABLE  "MORDICAI"."TAKES" ADD CONSTRAINT "TAKES_FK2" FOREIGN KEY ("COURSES_ID","SEMESTER_SEMESTER_ID") REFERENCES "MORDICAI"."COURSES"("ID","SEMESTER_SEMESTER_ID")  ;
  ALTER TABLE "MORDICAI"."TAKES" ADD PRIMARY KEY ("STUDENT_ID",  "COURSES_ID");



--------------------------------------------------------
--  DDL for Table TEACHES
--------------------------------------------------------

  CREATE TABLE "MORDICAI"."TEACHES" 
   (	"INSTRUCTORS_INS_ID" NUMBER(*,0), 
	"COURSES_ID" NUMBER(*,0), 
	"SECTION_ID" VARCHAR2(1 BYTE),
    "SEMESTER_SEMESTER_ID" NUMBER
   ); 
    ALTER TABLE  "MORDICAI"."TEACHES" ADD CONSTRAINT "TEACHES_FK1" FOREIGN KEY ("INSTRUCTORS_INS_ID") REFERENCES "MORDICAI"."INSTRUCTORS"("INS_ID")  ON DELETE SET NULL;
ALTER TABLE  "MORDICAI"."TEACHES" ADD CONSTRAINT "TEACHES_FK2" FOREIGN KEY ("COURSES_ID","SEMESTER_SEMESTER_ID") REFERENCES "MORDICAI"."COURSES"("ID","SEMESTER_SEMESTER_ID")  ON DELETE CASCADE;
ALTER TABLE  "MORDICAI"."TEACHES" ADD CONSTRAINT "TEACHES_FK3" FOREIGN KEY ("SECTION_ID") REFERENCES "MORDICAI"."SECTIONS"("ID")  ON DELETE CASCADE;
  ALTER TABLE "MORDICAI"."TEACHES" ADD PRIMARY KEY ("INSTRUCTORS_INS_ID",  "COURSES_ID");

   
     CREATE OR REPLACE PUBLIC SYNONYM "DBMS_OUTPUT" FOR "SYS"."DBMS_OUTPUT";
   